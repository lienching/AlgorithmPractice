{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf190
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red100\green56\blue32;\red196\green26\blue22;\red170\green13\blue145;
\red28\green0\blue207;\red92\green38\blue153;\red0\green116\blue0;\red63\green110\blue116;\red46\green13\blue110;
\red38\green71\blue75;}
\paperw11905\paperh16837\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 #include \cf3 <cstdio>\cf2 \
#include \cf3 <cstdlib>\cf2 \
#include \cf3 <cstring>\cf2 \
#include \cf3 <vector>\cf2 \
\cf4 int\cf0  data[\cf5 100001\cf0 ];\
\cf4 int\cf0  visit[\cf5 100001\cf0 ];\
\cf6 std\cf0 ::\cf6 vector\cf0 <\cf4 int\cf0 > child[\cf5 100001\cf0 ];\
\
\cf4 int\cf0  dfs(\cf4 int\cf0  n)\{\
   \cf7 // printf("node %d: %d\\n",n,data[n]);\cf0 \
    \cf8 visit\cf0 [n]=\cf5 1\cf0 ;\
    \cf8 data\cf0 [n]=\cf5 1\cf0 ;\
    \cf4 for\cf0 (\cf4 int\cf0  i=\cf5 0\cf0 ;i<\cf8 child\cf0 [n].\cf9 size\cf0 ();++i)\{\
        \cf4 if\cf0 (!\cf8 visit\cf0 [\cf8 child\cf0 [n][\cf9 i\cf0 ]])\
            \cf8 data\cf0 [n]+=\cf10 dfs\cf0 (\cf8 child\cf0 [n][\cf9 i\cf0 ]);\
    \}\
    \cf4 return\cf0  \cf8 data\cf0 [n];\
\}\
\
\cf4 int\cf0  main()\{\
    \cf4 int\cf0  T;\
    \cf9 scanf\cf0 (\cf3 "%d"\cf0 ,&T);\
    \cf4 while\cf0 (T--)\{\
        \cf9 memset\cf0 (\cf8 data\cf0 ,\cf5 0\cf0 ,\cf4 sizeof\cf0 (\cf8 data\cf0 ));\
        \cf4 int\cf0  n,n1,n2;\
        \cf9 scanf\cf0 (\cf3 "%d"\cf0 ,&n);\
        \cf4 for\cf0 (\cf4 int\cf0  i = \cf5 0\cf0  ; i < n ; i++)\{\
            \cf8 child\cf0 [i].\cf9 clear\cf0 ();\
            \cf8 visit\cf0 [i]=\cf5 0\cf0 ;\
        \}\
        \cf4 for\cf0 (\cf4 int\cf0  i = \cf5 0\cf0  ; i < n-\cf5 1\cf0  ;i++)\{\
            \cf9 scanf\cf0 (\cf3 "%d %d"\cf0 ,&n1,&n2);\
            \cf8 child\cf0 [n1].\cf9 push_back\cf0 (n2);\
            \cf8 data\cf0 [n1]++;\
            \cf8 child\cf0 [n2].\cf9 push_back\cf0 (n1);\
            \cf8 data\cf0 [n2]++;\
        \}\
        \cf10 dfs\cf0 (\cf5 0\cf0 );\
        \cf9 printf\cf0 (\cf3 "node 0: %d\\n"\cf0 ,n);\
        \cf4 for\cf0 (\cf4 int\cf0  i = \cf5 1\cf0  ; i < n ; i++)\{\
            \cf9 printf\cf0 (\cf3 "node %d: %d\\n"\cf0 ,i,\cf8 data\cf0 [i]);\
        \}\
    \}\
    \cf4 return\cf0  \cf5 0\cf0 ;\
\}}